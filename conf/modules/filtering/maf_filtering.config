/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
        ext.when   = When to run the module.
----------------------------------------------------------------------------------------
*/

// MAF FILTERING

process {  // maf filtering
    if (params.tools && params.tools.split(',').contains('filtering')) {


		withName: "VCF2MAF" {
            ext.args =  { [
                "--inhibit-vep",
                "--normal-id ${meta.normal_id}",
                "--tumor-id ${meta.tumor_id}",
                "--vcf-tumor-id ${meta.tumor_id}",
                "--vcf-normal-id ${meta.normal_id}",
                "--max-subpop-af 0.0001",
                "--retain-ann gnomADg_AF,MAX_AF,MAX_AF_POPS",
                "--retain-fmt AD,DP,AF,GT",
                params.vep_genome              ? "--ncbi-build ${params.vep_genome}"              : '',
                meta.variantcaller == "strelka"? "--vcf-tumor-id TUMOR --vcf-normal-id NORMAL"    : ''
            ].join(' ').trim() }
            ext.prefix     = { "${meta.id}.${meta.variantcaller}" }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/variants/annotated/unfiltered/${meta.patient}/${meta.id}/" },
                pattern: "*{maf,maf.gz}"
            ]
        }

		withName: "FILTERING" {
	                ext.prefix = { "${meta.id}.filtered"}
	                ext.args   = { [params.whitelist? "--whitelist ${params.whitelist}": "",
	                                params.blacklist? "--blacklist ${params.blacklist}": ""].join(' ').trim() }
	                publishDir = [
	                mode: params.publish_dir_mode,
	                path: { "${params.outdir}/variants/annotated/filtered/${meta.patient}/${meta.id}/" },
	                pattern: "*{maf,maf.gz}"
	            ]
	    }

	    withName: 'SAMTOOLS_MERGE_SECOND_PASS' {
	            ext.prefix       = {"${meta.id}.merged_2ndpass"}
	            publishDir       = [
	                mode: params.publish_dir_mode,
	                path: { "${params.outdir}/preprocessing/second_pass/input/${meta.patient}/${meta.id}/" },
	                pattern: "*{bam}",
	                enabled: params.save_align_intermeds
	            ]
	    }



	    withName: 'RNA_FILTERING' {
	            ext.prefix       = {"${meta.id}.rna_filt"}
	            ext.args   = { [params.rnaedits?       "--rnaedits ${params.rnaedits}": "",
	                            params.rna_pon?        "--pon   ${params.rna_pon}"    : "",
	                            params.chain?          "--chain ${params.chain}"      : "",
	                            params.fasta19?        "--ref19 ${params.fasta19}"    : "",
	                            params.rna_pon19?      "--pon19 ${params.rna_pon19}"  : ""
	                            ].join(' ').trim() }

	            publishDir       = [
	                mode: params.publish_dir_mode,
	                path: { "${params.outdir}/variants/annotated/filtered/${meta.patient}/${meta.id}/" },
	                pattern: "*{maf}",
	                enabled: true
	            ]
	    }
	}
}