/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
        ext.when   = When to run the module.
----------------------------------------------------------------------------------------
*/

// CONSENSUS

process {  // consensus

    if (params.tools && params.tools.split(',').contains('consensus')) {

		withName: 'RUN_CONSENSUS' {
	               ext.prefix = { "${meta.id}.consensus"}
	               ext.args = {"--id=${meta.id}"}
	                publishDir       = [
	                        mode: params.publish_dir_mode,
	                        path: { "${params.outdir}/variant_calling/consensus/${meta.patient}/${meta.id}/" },
	                        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
	                        enabled: true
	            ]
	    }

	    withName: 'RUN_CONSENSUS_RESCUE_DNA' {
	               ext.prefix = { "${meta.id}.withRNA.consensus"}
	               ext.args = {"--id=${meta.id}_withRNAConsensus"}
	                publishDir       = [
	                        mode: params.publish_dir_mode,
	                        path: { "${params.outdir}/variant_calling/consensus/${meta.patient}/${meta.id}/" },
	                        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
	                        enabled: true
	            ]
	    }

	    withName: 'RUN_CONSENSUS_RESCUE_RNA' {
	               ext.prefix = { "${meta.id}.withDNA.consensus"}
	               ext.args = {"--id=${meta.id}_withDNAConsensus"}
	                publishDir       = [
	                        mode: params.publish_dir_mode,
	                        path: { "${params.outdir}/variant_calling/consensus/${meta.patient}/${meta.id}/" },
	                        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
	                        enabled: true
	            ]
	    }

	}
}
